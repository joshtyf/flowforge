version: "3.8"
services:
  frontend:
    profiles:
      - main
      - fe
    build:
      context: frontend
    ports:
      - "3000:3000"
    env_file: ./frontend/.env.local
    environment:
      - NEXT_PUBLIC_APP_ENV=${NEXT_PUBLIC_APP_ENV}

  backend:
    ports:
      - "8080:8080"
    profiles:
      - main
      - be
    build:
      context: backend
    volumes:
      - flowforge_executor_logs:/backend/executor_logs
    environment:
      - ENV=${ENV}
      - MONGO_URI=${MONGO_URI}
      - POSTGRES_URI=${POSTGRES_URI}
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
      - MANAGEMENT_API_SECRET=${MANAGEMENT_API_SECRET}
      - MANAGEMENT_API_CLIENT=${MANAGEMENT_API_CLIENT}
      - MANAGEMENT_API_AUDIENCE=${MANAGEMENT_API_AUDIENCE}
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/healthcheck"]
      start_period: 30s
      start_interval: 5s
      interval: 60s
      retries: 3

  postgres:
    profiles:
      - main
      - be
      - be-seed
    image: postgres:16-alpine
    ports:
      - "127.0.0.1:5433:5432"
    volumes:
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=postgres
      - POSTGRES_DB=flowforge_db
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      start_period: 30s
      start_interval: 5s
      interval: 60s
      retries: 3

  postgres_seed:
    profiles:
      - be-seed
    build:
      context: backend
      dockerfile: database/seed/seed.Dockerfile
    command: ["./dist/main", "postgres"]
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - POSTGRES_URI=${POSTGRES_URI}
      - USER_SEED_FILENAME=${users:-user.csv}
      - ORG_SEED_FILENAME=${orgs:-org.csv}
      - MEMBERSHIP_SEED_FILENAME=${memberships:-membership.csv}
      - CREATE_USERS=${create_users:-false}
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
      - MANAGEMENT_API_SECRET=${MANAGEMENT_API_SECRET}
      - MANAGEMENT_API_CLIENT=${MANAGEMENT_API_CLIENT}
      - MANAGEMENT_API_AUDIENCE=${MANAGEMENT_API_AUDIENCE}

  mongo:
    profiles:
      - main
      - be
      - be-seed
    image: mongo:7.0
    ports:
      - "127.0.0.1:27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=flowforge_db
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--eval",
          "'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'",
          "--quiet",
        ]
      start_period: 30s
      start_interval: 5s
      interval: 60s
      retries: 3

  mongo_seed:
    profiles:
      - be-seed
    build:
      context: backend
      dockerfile: database/seed/seed.Dockerfile
    command: ["./dist/main", "mongo"]
    depends_on:
      mongo:
        condition: service_healthy
      postgres_seed:
        condition: service_completed_successfully

    environment:
      - MONGO_URI=${MONGO_URI}

volumes:
  flowforge_executor_logs: